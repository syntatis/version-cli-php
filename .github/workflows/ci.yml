name: CI

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
    paths:
      - ".github/workflows/ci.yml"
      - "**.php"
      - "composer.json"
      - "composer.lock"
      - "phpcs.xml.dist"
      - "phpstan.neon.dist"
      - "phpunit.xml.dist"
    types: [ready_for_review, synchronize, opened]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    runs-on: ubuntu-latest
    name: Lint

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.4

      - name: Install PHP dependencies
        uses: ramsey/composer-install@v3

      - name: Analyze source code
        run: composer lint

  analyze:
    runs-on: ubuntu-latest
    name: Analyze

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.4

      - name: Install PHP dependencies
        uses: ramsey/composer-install@v3

      - name: Analyze source code
        run: composer analyze

  test:
    needs: [lint, analyze]
    runs-on: ubuntu-latest
    name: Test

    strategy:
      fail-fast: true
      max-parallel: 3
      matrix:
        php: ["7.4", "8.0", "8.1", "8.2", "8.3", "8.4"]
        stability: [prefer-lowest, prefer-stable]
        machine: [windows-latest, ubuntu-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup PHP for test
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}

      - name: Install PHP dependencies
        uses: ramsey/composer-install@v3

      - name: Install bashunit
        run: |
          curl -s https://bashunit.typeddevs.com/install.sh > install.sh
          chmod +x install.sh
          ./install.sh

      - name: Run PHPUnit test
        run: composer test

      - name: Run bashunit test
        if: matrix.machine != 'windows-latest'
        run: ./lib/bashunit ./tests/bashunit/*.sh
